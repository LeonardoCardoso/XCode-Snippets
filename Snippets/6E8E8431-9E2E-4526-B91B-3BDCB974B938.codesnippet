<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>rv</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import SnapKit
#if !RX_NO_MODULE
    import RxSwift
    import RxCocoa
#endif

class &lt;#View#&gt;: UIView {
    
    // MARK: - Properties
    var &lt;#someView#&gt;: &lt;#SomeViewClass#&gt;?
    
    // MARK: - Initializers
    init(superview: UIView) {
        
        super.init(frame: .zero)
        
        self.configureSubviews()
        
        if let &lt;#someView#&gt;: &lt;#SomeClassView#&gt; = self.&lt;#someView#&gt; { self.addSubview(&lt;#someView#&gt;) }
        
        superview.addSubview(self)
        
    }
    
    required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) }
    
    // MARK: - Functions
    // Configure SubViews
    func configureSubviews() {
        
        self.&lt;#someView#&gt; = &lt;#SomeViewClass#&gt;().then {
            
            $0.&lt;#someProperty#&gt; = &lt;#someValue#&gt;
            
        }
        
    }
    
    // Set up layout
    func layout() {
        
        self.snp.makeConstraints { (make) -&gt; Void in
            
            make.width.equalToSuperview()
            make.height.equalToSuperview()
            
        }
        
        self.&lt;#someView#&gt;?.snp.makeConstraints { (make) -&gt; Void in
            
            &lt;#someContraints#&gt;
            
        }
        
    }
    
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>6E8E8431-9E2E-4526-B91B-3BDCB974B938</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Rx View</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
