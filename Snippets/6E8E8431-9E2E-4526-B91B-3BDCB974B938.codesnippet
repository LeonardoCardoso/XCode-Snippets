<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>rv</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import SnapKit
import Then
#if !RX_NO_MODULE
    import RxSwift
    import RxCocoa
#endif

/// &lt;#View#&gt;
final class &lt;#View#&gt;: UIView {
    
    // MARK: - Properties
    var &lt;#someView#&gt;: &lt;#SomeViewClass#&gt;?
    
    // MARK: - Functions
    /** 
     Set up views.
     */
    static func setUp(superview: UIView) -&gt; $1View {
        
        let view = $1View()
        view.configureSubviews()
        
        if let &lt;#someView#&gt; = view.&lt;#someView#&gt; { view.addSubview(&lt;#someView#&gt;) }
        
        superview.addSubview(view)
        
        return view
        
    }
    
    /**
     Configure subviews.
     */
    internal func configureSubviews() {
        
        &lt;#someView#&gt; = &lt;#SomeViewClass#&gt;().then {
            
            $0.&lt;#someProperty#&gt; = &lt;#someValue#&gt;
            
        }
        
    }
    
    // Set up layout
    func layout() {
        
        snp.makeConstraints {
            
            $0.width.equalToSuperview()
            $0.height.equalToSuperview()
            
        }
        
        &lt;#someView#&gt;?.snp.makeConstraints {
            
            $0.&lt;#someContraint#&gt;
            
        }
        
    }
    
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>6E8E8431-9E2E-4526-B91B-3BDCB974B938</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Rx View</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
